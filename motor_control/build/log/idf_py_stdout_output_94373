[1/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[2/10] Performing build step for 'bootloader'
[1/1] cd /home/mohab/esp/motor_control/build/bootloader/esp-idf/esptool_py && /home/mohab/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/mohab/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/mohab/esp/motor_control/build/bootloader/bootloader.bin
Bootloader binary size 0x6910 bytes. 0x6f0 bytes (6%) free.
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable motor_control.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/mohab/esp/motor_control/build/motor_control.bin
[7/8] cd /home/mohab/esp/motor_control/build/esp-idf/esptool_py && /home/mohab/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/mohab/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/mohab/esp/motor_control/build/partition_table/partition-table.bin /home/mohab/esp/motor_control/build/motor_control.bin
motor_control.bin binary size 0x301f0 bytes. Smallest app partition is 0x100000 bytes. 0xcfe10 bytes (81%) free.
[7/8] cd /home/mohab/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/mohab/esp/esp-idf -D "SERIAL_TOOL=/home/mohab/.espressif/python_env/idf5.2_py3.10_env/bin/python;;/home/mohab/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/mohab/esp/motor_control/build -P /home/mohab/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 motor_control.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev1
Serial port /dev/ttyUSB0
Connecting.......
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 24:6f:28:16:24:98
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00040fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26896 bytes to 16882...
Writing at 0x00001000... (50 %)
Writing at 0x00007693... (100 %)
Wrote 26896 bytes (16882 compressed) at 0x00001000 in 0.7 seconds (effective 298.8 kbit/s)...
Hash of data verified.
Compressed 197104 bytes to 107602...
Writing at 0x00010000... (14 %)
Writing at 0x0001d081... (28 %)
Writing at 0x00022bec... (42 %)
Writing at 0x00028a41... (57 %)
Writing at 0x0002eea7... (71 %)
Writing at 0x00036e6b... (85 %)
Writing at 0x0003ca9d... (100 %)
Wrote 197104 bytes (107602 compressed) at 0x00010000 in 2.5 seconds (effective 621.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 511.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
